{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { makeSource, defineDocumentType } from \"@contentlayer/source-files\";\n\nimport GithubSlugger from \"github-slugger\";\nimport readingTime from \"reading-time\";\n\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeSlug from \"rehype-slug\";\n\nconst Doc = defineDocumentType(() => ({\n  name: \"Doc\",\n  filePathPattern: \"**/**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    publishedAt: {\n      type: \"date\",\n      required: true,\n    },\n    updatedAt: {\n      type: \"date\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: true,\n    },\n    isPublished: {\n      type: \"boolean\",\n      required: true,\n    },\n    author: {\n      type: \"list\",\n      of: {\n        type: \"string\",\n      },\n      required: true,\n    },\n    tags: {\n      type: \"list\",\n      of: {\n        type: \"string\",\n      },\n    },\n    chapterTitle: {\n      type: \"string\",\n      required: true,\n    },\n    chapterIdx: {\n      type: \"number\",\n      required: true,\n    },\n    sectionIdx: {\n      type: \"number\",\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/course-book/${doc._raw.flattenedPath}`,\n    },\n    readingTime: {\n      type: \"json\",\n      resolve: (doc) => readingTime(doc.body.raw),\n    },\n    toc: {\n      type: \"json\",\n      resolve: async (doc) => {\n        const regulrExp = /\\n(?<flag>#{1,6})\\s+(?<content>.+)/g;\n        const slugger = new GithubSlugger();\n        const headings = Array.from(doc.body.raw.matchAll(regulrExp)).map(\n          ({ groups }) => {\n            const flag = groups?.flag;\n            const content = groups?.content;\n\n            return {\n              level:\n                flag?.length == 1 ? \"one\" : flag?.length == 2 ? \"two\" : \"three\",\n              text: content,\n              slug: content ? slugger.slug(content) : undefined,\n            };\n          }\n        );\n\n        return headings;\n      },\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Doc],\n  mdx: {\n    rehypePlugins: [\n      rehypeSlug,\n      [rehypeAutolinkHeadings],\n      [\n        rehypePrettyCode,\n        {\n          theme: \"github-dark\",\n        },\n      ],\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,YAAY,0BAA0B;AAE/C,OAAO,mBAAmB;AAC1B,OAAO,iBAAiB;AAExB,OAAO,sBAAsB;AAC7B,OAAO,4BAA4B;AACnC,OAAO,gBAAgB;AAEvB,IAAM,MAAM,mBAAmB,OAAO;AAAA,EACpC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,IAAI;AAAA,QACF,MAAM;AAAA,MACR;AAAA,MACA,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI;AAAA,QACF,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,gBAAgB,IAAI,KAAK,aAAa;AAAA,IAC1D;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG;AAAA,IAC5C;AAAA,IACA,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,OAAO,QAAQ;AACtB,cAAM,YAAY;AAClB,cAAM,UAAU,IAAI,cAAc;AAClC,cAAM,WAAW,MAAM,KAAK,IAAI,KAAK,IAAI,SAAS,SAAS,CAAC,EAAE;AAAA,UAC5D,CAAC,EAAE,OAAO,MAAM;AACd,kBAAM,OAAO,QAAQ;AACrB,kBAAM,UAAU,QAAQ;AAExB,mBAAO;AAAA,cACL,OACE,MAAM,UAAU,IAAI,QAAQ,MAAM,UAAU,IAAI,QAAQ;AAAA,cAC1D,MAAM;AAAA,cACN,MAAM,UAAU,QAAQ,KAAK,OAAO,IAAI;AAAA,YAC1C;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,GAAG;AAAA,EACnB,KAAK;AAAA,IACH,eAAe;AAAA,MACb;AAAA,MACA,CAAC,sBAAsB;AAAA,MACvB;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
